<template>
  <AdminLayout>
    <!-- Header with breadcrumb -->
    <div class="mb-8">
      <Link :href="route('admin.content.domains.index')" :class="[
        'text-sm mb-4 inline-block transition-colors',
        isDarkMode 
          ? 'text-blue-400 hover:text-blue-300' 
          : 'text-blue-600 hover:text-blue-800'
      ]">
        ‚Üê Back to Domains
      </Link>
      <div class="flex items-start justify-between">
        <div>
          <h1 :class="[
            'text-3xl font-bold',
            isDarkMode ? 'text-white' : 'text-gray-900'
          ]">
            {{ domain.name }}
          </h1>
          <p :class="[
            'mt-1 text-sm',
            isDarkMode ? 'text-gray-300' : 'text-gray-600'
          ]">Domain Details</p>
        </div>
      </div>
    </div>

    <!-- Domain Details Card -->
    <div :class="[
      'rounded-lg shadow-sm p-8',
      isDarkMode ? 'bg-gray-800' : 'bg-white'
    ]">
      <div class="space-y-8">
        <!-- Row 1: Name and ID -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          <div>
            <label :class="[
              'block text-sm font-medium mb-2',
              isDarkMode ? 'text-gray-200' : 'text-gray-700'
            ]">Name</label>
            <div :class="[
              'border rounded-md px-4 py-3',
              isDarkMode 
                ? 'bg-gray-700 border-gray-600 text-white' 
                : 'bg-gray-50 border-gray-200 text-gray-900'
            ]">
              {{ domain.name }}
            </div>
          </div>
          <div>
            <label :class="[
              'block text-sm font-medium mb-2',
              isDarkMode ? 'text-gray-200' : 'text-gray-700'
            ]">ID</label>
            <div :class="[
              'border rounded-md px-4 py-3',
              isDarkMode 
                ? 'bg-gray-700 border-gray-600 text-white' 
                : 'bg-gray-50 border-gray-200 text-gray-900'
            ]">
              {{ domain.id }}
            </div>
          </div>
        </div>

        <!-- Row 2: Description -->
        <div>
          <label :class="[
            'block text-sm font-medium mb-2',
            isDarkMode ? 'text-gray-200' : 'text-gray-700'
          ]">Description</label>
          <div :class="[
            'border rounded-md px-4 py-3 min-h-[100px]',
            isDarkMode 
              ? 'bg-gray-700 border-gray-600 text-white' 
              : 'bg-gray-50 border-gray-200 text-gray-900'
          ]">
            {{ domain.description || 'No description provided' }}
          </div>
        </div>

        <!-- Row 3: Timestamps -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          <div>
            <label :class="[
              'block text-sm font-medium mb-2',
              isDarkMode ? 'text-gray-200' : 'text-gray-700'
            ]">Created At</label>
            <div :class="[
              'border rounded-md px-4 py-3',
              isDarkMode 
                ? 'bg-gray-700 border-gray-600 text-white' 
                : 'bg-gray-50 border-gray-200 text-gray-900'
            ]">
              {{ formatDate(domain.created_at) }}
            </div>
          </div>
          <div>
            <label :class="[
              'block text-sm font-medium mb-2',
              isDarkMode ? 'text-gray-200' : 'text-gray-700'
            ]">Updated At</label>
            <div :class="[
              'border rounded-md px-4 py-3',
              isDarkMode 
                ? 'bg-gray-700 border-gray-600 text-white' 
                : 'bg-gray-50 border-gray-200 text-gray-900'
            ]">
              {{ formatDate(domain.updated_at) }}
            </div>
          </div>
        </div>
      </div>

      <!-- Action Button -->
      <div class="mt-8 flex justify-end">
        <Link 
          :href="route('admin.content.domains.edit', domain.id)"
          :class="[
            'px-6 py-2.5 rounded-md transition-colors font-medium',
            isDarkMode 
              ? 'bg-blue-600 hover:bg-blue-700 text-white' 
              : 'bg-blue-600 hover:bg-blue-700 text-white'
          ]"
        >
          Edit Domain
        </Link>
      </div>
    </div>
  </AdminLayout>
</template>

<script setup>
import { ref, onMounted, onUnmounted } from 'vue'
import { Link } from '@inertiajs/vue3'
import AdminLayout from '@/Layouts/AdminLayout.vue'

// Dark mode state management
const isDarkMode = ref(false)

const initializeDarkMode = () => {
  const saved = localStorage.getItem('adminDarkMode')
  if (saved !== null) {
    isDarkMode.value = JSON.parse(saved)
  }
}

const handleDarkModeChange = (event) => {
  if (event.key === 'adminDarkMode') {
    isDarkMode.value = JSON.parse(event.newValue || 'false')
  }
}

const handleCustomDarkModeChange = (event) => {
  isDarkMode.value = event.detail.isDarkMode
}

onMounted(() => {
  initializeDarkMode()
  
  // Listen for dark mode changes
  window.addEventListener('storage', handleDarkModeChange)
  window.addEventListener('adminDarkModeChanged', handleCustomDarkModeChange)
})

onUnmounted(() => {
  window.removeEventListener('storage', handleDarkModeChange)
  window.removeEventListener('adminDarkModeChanged', handleCustomDarkModeChange)
})

const props = defineProps({
  domain: Object,
})

function formatDate(dateString) {
  if (!dateString) return 'Not set'
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  })
}
</script>
