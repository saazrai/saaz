<template>
  <AdminLayout>
    <div class="mb-8">
      <nav class="flex mb-4" aria-label="Breadcrumb">
        <ol class="inline-flex items-center space-x-1 md:space-x-3">
          <li>
            <Link :href="route('admin.content.domains.index')" :class="[
              'text-sm transition-colors',
              isDarkMode 
                ? 'text-blue-400 hover:text-blue-300' 
                : 'text-blue-600 hover:text-blue-800'
            ]">
              Domains
            </Link>
          </li>
          <li>
            <div class="flex items-center">
              <svg :class="[
                'w-6 h-6',
                isDarkMode ? 'text-gray-500' : 'text-gray-400'
              ]" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
              </svg>
              <span :class="[
                'ml-1 text-sm font-medium',
                isDarkMode ? 'text-gray-400' : 'text-gray-500'
              ]">Create Domain</span>
            </div>
          </li>
        </ol>
      </nav>
      <h1 :class="[
        'text-3xl font-bold',
        isDarkMode ? 'text-white' : 'text-gray-900'
      ]">Create New Domain</h1>
      <p :class="[
        'mt-1 text-sm',
        isDarkMode ? 'text-gray-300' : 'text-gray-600'
      ]">Add a new learning domain to your platform</p>
    </div>

    <div :class="[
      'shadow-sm rounded-lg',
      isDarkMode ? 'bg-gray-800' : 'bg-white'
    ]">
      <form @submit.prevent="submit" class="p-8 space-y-6">
        <div>
          <label for="name" :class="[
            'block text-sm font-medium',
            isDarkMode ? 'text-gray-200' : 'text-gray-700'
          ]">Domain Name</label>
          <input 
            id="name"
            v-model="form.name" 
            type="text"
            :class="[
              'mt-1 block w-full rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm transition-colors',
              isDarkMode 
                ? 'border-gray-600 bg-gray-700 text-white placeholder-gray-400' 
                : 'border-gray-300 bg-white text-gray-900 placeholder-gray-500'
            ]"
            placeholder="Enter domain name"
            required 
          />
          <div v-if="form.errors.name" class="mt-2 text-sm text-red-600">{{ form.errors.name }}</div>
        </div>
        
        <div>
          <label for="description" :class="[
            'block text-sm font-medium',
            isDarkMode ? 'text-gray-200' : 'text-gray-700'
          ]">Description</label>
          <textarea 
            id="description"
            v-model="form.description" 
            rows="4"
            :class="[
              'mt-1 block w-full rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm transition-colors',
              isDarkMode 
                ? 'border-gray-600 bg-gray-700 text-white placeholder-gray-400' 
                : 'border-gray-300 bg-white text-gray-900 placeholder-gray-500'
            ]"
            placeholder="Enter domain description"
          ></textarea>
          <div v-if="form.errors.description" class="mt-2 text-sm text-red-600">{{ form.errors.description }}</div>
        </div>

        <div class="flex justify-end space-x-4">
          <Link 
            :href="route('admin.content.domains.index')" 
            :class="[
              'px-6 py-2.5 border shadow-sm text-sm font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500',
              isDarkMode 
                ? 'border-gray-600 text-gray-300 bg-gray-700 hover:bg-gray-600' 
                : 'border-gray-300 text-gray-700 bg-white hover:bg-gray-50'
            ]"
          >
            Cancel
          </Link>
          <button 
            type="submit" 
            :disabled="form.processing"
            :class="[
              'px-6 py-2.5 border border-transparent text-sm font-medium rounded-md shadow-sm text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 transition-colors flex items-center',
              isDarkMode 
                ? 'bg-blue-600 hover:bg-blue-700' 
                : 'bg-blue-600 hover:bg-blue-700'
            ]"
          >
            <svg v-if="form.processing" class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            {{ form.processing ? 'Creating...' : 'Create Domain' }}
          </button>
        </div>
      </form>
    </div>
  </AdminLayout>
</template>

<script setup>
import { ref, onMounted, onUnmounted } from 'vue'
import { useForm, Link } from '@inertiajs/vue3'
import AdminLayout from '@/Layouts/AdminLayout.vue'

// Dark mode state management
const isDarkMode = ref(false)

const initializeDarkMode = () => {
  const saved = localStorage.getItem('adminDarkMode')
  if (saved !== null) {
    isDarkMode.value = JSON.parse(saved)
  }
}

const handleDarkModeChange = (event) => {
  if (event.key === 'adminDarkMode') {
    isDarkMode.value = JSON.parse(event.newValue || 'false')
  }
}

const handleCustomDarkModeChange = (event) => {
  isDarkMode.value = event.detail.isDarkMode
}

onMounted(() => {
  initializeDarkMode()
  
  // Listen for dark mode changes
  window.addEventListener('storage', handleDarkModeChange)
  window.addEventListener('adminDarkModeChanged', handleCustomDarkModeChange)
})

onUnmounted(() => {
  window.removeEventListener('storage', handleDarkModeChange)
  window.removeEventListener('adminDarkModeChanged', handleCustomDarkModeChange)
})

const form = useForm({ 
  name: '', 
  description: '' 
})

function submit() {
  form.post(route('admin.content.domains.store'), {
    onSuccess: () => {
      // Form will redirect on success
    }
  })
}
</script>
