<template>
    <AdminLayout>
        <Head title="Engagement Analytics" />
        
        <div :class="[isDarkMode ? 'bg-gray-900 text-gray-100' : 'bg-gray-50 text-gray-900', 'p-6']">
            <div class="mb-6">
                <h1 :class="[isDarkMode ? 'text-gray-100' : 'text-gray-900', 'text-2xl font-semibold']">Engagement Analytics</h1>
                <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-600']">User engagement and interaction metrics</p>
            </div>

            <!-- Engagement Overview -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'p-6 rounded-lg shadow border']">
                    <h3 :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm font-medium']">Daily Active Users</h3>
                    <p :class="[isDarkMode ? 'text-gray-100' : 'text-gray-900', 'text-2xl font-bold mt-2']">{{ data.dailyActiveUsers || 0 }}</p>
                    <p class="text-sm text-green-600 mt-1">+{{ data.dauGrowth || 0 }}%</p>
                </div>
                <div :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'p-6 rounded-lg shadow border']">
                    <h3 :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm font-medium']">Avg. Study Time</h3>
                    <p :class="[isDarkMode ? 'text-gray-100' : 'text-gray-900', 'text-2xl font-bold mt-2']">{{ data.avgStudyTime || 0 }} min</p>
                </div>
                <div :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'p-6 rounded-lg shadow border']">
                    <h3 :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm font-medium']">Forum Posts</h3>
                    <p :class="[isDarkMode ? 'text-gray-100' : 'text-gray-900', 'text-2xl font-bold mt-2']">{{ data.forumPosts || 0 }}</p>
                </div>
                <div :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'p-6 rounded-lg shadow border']">
                    <h3 :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm font-medium']">Quiz Attempts</h3>
                    <p :class="[isDarkMode ? 'text-gray-100' : 'text-gray-900', 'text-2xl font-bold mt-2']">{{ data.quizAttempts || 0 }}</p>
                </div>
            </div>

            <!-- Engagement by Feature -->
            <div :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'rounded-lg shadow mb-6 border']">
                <div :class="[isDarkMode ? 'border-gray-700' : 'border-gray-200', 'px-6 py-4 border-b']">
                    <h3 :class="[isDarkMode ? 'text-gray-100' : 'text-gray-900', 'text-lg font-medium']">Feature Engagement</h3>
                </div>
                <div class="p-6">
                    <div class="space-y-4">
                        <div v-for="feature in data.featureEngagement || []" :key="feature.name">
                            <div class="flex justify-between items-center mb-1">
                                <span :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'text-sm font-medium']">{{ feature.name }}</span>
                                <span :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm']">{{ feature.users }} users</span>
                            </div>
                            <div :class="[isDarkMode ? 'bg-gray-600' : 'bg-gray-200', 'w-full rounded-full h-2']">
                                <div class="bg-blue-600 h-2 rounded-full" 
                                     :style="`width: ${feature.percentage}%`"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Study Patterns -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <div :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'rounded-lg shadow p-6 border']">
                    <h3 :class="[isDarkMode ? 'text-gray-100' : 'text-gray-900', 'text-lg font-medium mb-4']">Study Time by Day</h3>
                    <div :class="[isDarkMode ? 'bg-gray-700' : 'bg-gray-100', 'h-64 rounded flex items-center justify-center']">
                        <span :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500']">Study patterns chart placeholder</span>
                    </div>
                </div>

                <div :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'rounded-lg shadow p-6 border']">
                    <h3 :class="[isDarkMode ? 'text-gray-100' : 'text-gray-900', 'text-lg font-medium mb-4']">Most Engaged Topics</h3>
                    <div class="space-y-3">
                        <div v-for="topic in data.topEngagedTopics || []" :key="topic.id" 
                             class="flex justify-between items-center">
                            <span :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'text-sm']">{{ topic.name }}</span>
                            <div class="flex items-center">
                                <span :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm mr-2']">{{ topic.engagement_score }}</span>
                                <div :class="[isDarkMode ? 'bg-gray-600' : 'bg-gray-200', 'w-20 rounded-full h-2']">
                                    <div class="bg-green-600 h-2 rounded-full" 
                                         :style="`width: ${topic.engagement_percentage}%`"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </AdminLayout>
</template>

<script setup>
import { Head } from '@inertiajs/vue3'
import { ref, onMounted, onUnmounted } from 'vue'
import AdminLayout from '@/Layouts/AdminLayout.vue'

const props = defineProps({
    data: Object,
    dateRange: String
})

// Dark mode state management
const isDarkMode = ref(false)

const updateDarkMode = () => {
    isDarkMode.value = localStorage.getItem('adminDarkMode') === 'true'
}

onMounted(() => {
    updateDarkMode()
    window.addEventListener('storage', updateDarkMode)
    window.addEventListener('adminDarkModeChanged', updateDarkMode)
})

onUnmounted(() => {
    window.removeEventListener('storage', updateDarkMode)
    window.removeEventListener('adminDarkModeChanged', updateDarkMode)
})
</script>