<template>
  <AdminLayout pageTitle="System Settings">
    <div class="container mx-auto px-4 py-8">
      <!-- Header -->
      <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-8">
        <div>
          <h1 :class="['text-3xl font-bold', isDarkMode ? 'text-white' : 'text-gray-900']">System Settings</h1>
          <p :class="[isDarkMode ? 'text-gray-300' : 'text-gray-600']">Configure system-wide settings and preferences.</p>
        </div>
      </div>

      <!-- Settings Navigation Tabs -->
      <div class="mb-6">
        <nav class="flex space-x-8" aria-label="Tabs">
          <button
            v-for="tab in tabs"
            :key="tab.id"
            @click="activeTab = tab.id"
            :class="[
              activeTab === tab.id
                ? 'border-blue-500 text-blue-600'
                : isDarkMode 
                  ? 'border-transparent text-gray-400 hover:text-gray-300 hover:border-gray-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300',
              'whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm'
            ]"
          >
            <component :is="tab.icon" class="w-4 h-4 mr-2 inline" />
            {{ tab.name }}
          </button>
        </nav>
      </div>

    <!-- Settings Content -->
    <div class="space-y-6">
      <!-- General Settings -->
      <div v-show="activeTab === 'general'" :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'rounded-lg shadow-sm border']">
        <div :class="[isDarkMode ? 'border-gray-700' : 'border-gray-200', 'px-6 py-4 border-b']">
          <h3 :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-lg font-medium']">General Settings</h3>
          <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm mt-1']">Basic application configuration</p>
        </div>
        <form @submit.prevent="saveGeneralSettings" class="p-6 space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="app_name" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Application Name</label>
              <input
                v-model="generalSettings.app_name"
                type="text"
                id="app_name"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="Academy Platform"
              />
            </div>
            <div>
              <label for="app_url" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Application URL</label>
              <input
                v-model="generalSettings.app_url"
                type="url"
                id="app_url"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="https://academy.example.com"
              />
            </div>
            <div>
              <label for="timezone" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Default Timezone</label>
              <select
                v-model="generalSettings.timezone"
                id="timezone"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
              >
                <option value="UTC">UTC</option>
                <option value="America/New_York">Eastern Time</option>
                <option value="America/Chicago">Central Time</option>
                <option value="America/Denver">Mountain Time</option>
                <option value="America/Los_Angeles">Pacific Time</option>
                <option value="Europe/London">London</option>
                <option value="Europe/Paris">Paris</option>
                <option value="Asia/Tokyo">Tokyo</option>
              </select>
            </div>
            <div>
              <label for="default_language" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Default Language</label>
              <select
                v-model="generalSettings.default_language"
                id="default_language"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
              >
                <option value="en">English</option>
                <option value="es">Spanish</option>
                <option value="fr">French</option>
                <option value="de">German</option>
                <option value="zh">Chinese</option>
              </select>
            </div>
          </div>
          
          <div class="space-y-4">
            <div class="flex items-center">
              <input
                v-model="generalSettings.user_registration"
                type="checkbox"
                id="user_registration"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="user_registration" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'ml-2 block text-sm']">
                Allow user registration
              </label>
            </div>
            <div class="flex items-center">
              <input
                v-model="generalSettings.email_verification"
                type="checkbox"
                id="email_verification"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="email_verification" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'ml-2 block text-sm']">
                Require email verification
              </label>
            </div>
            <div class="flex items-center">
              <input
                v-model="generalSettings.maintenance_mode"
                type="checkbox"
                id="maintenance_mode"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="maintenance_mode" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'ml-2 block text-sm']">
                Maintenance mode
              </label>
            </div>
          </div>

          <div class="flex justify-end">
            <Button type="submit" :disabled="generalForm.processing">
              {{ generalForm.processing ? 'Saving...' : 'Save General Settings' }}
            </Button>
          </div>
        </form>
      </div>

      <!-- Email Configuration -->
      <div v-show="activeTab === 'email'" :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'rounded-lg shadow-sm border']">
        <div :class="[isDarkMode ? 'border-gray-700' : 'border-gray-200', 'px-6 py-4 border-b']">
          <h3 :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-lg font-medium']">Email Configuration</h3>
          <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm mt-1']">Configure email delivery settings</p>
        </div>
        <form @submit.prevent="saveEmailSettings" class="p-6 space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="mail_driver" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Mail Driver</label>
              <select
                v-model="emailSettings.mail_driver"
                id="mail_driver"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
              >
                <option value="smtp">SMTP</option>
                <option value="sendmail">Sendmail</option>
                <option value="mailgun">Mailgun</option>
                <option value="ses">Amazon SES</option>
              </select>
            </div>
            <div>
              <label for="mail_host" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">SMTP Host</label>
              <input
                v-model="emailSettings.mail_host"
                type="text"
                id="mail_host"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="smtp.gmail.com"
              />
            </div>
            <div>
              <label for="mail_port" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">SMTP Port</label>
              <input
                v-model="emailSettings.mail_port"
                type="number"
                id="mail_port"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="587"
              />
            </div>
            <div>
              <label for="mail_encryption" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Encryption</label>
              <select
                v-model="emailSettings.mail_encryption"
                id="mail_encryption"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
              >
                <option value="">None</option>
                <option value="tls">TLS</option>
                <option value="ssl">SSL</option>
              </select>
            </div>
            <div>
              <label for="mail_username" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Username</label>
              <input
                v-model="emailSettings.mail_username"
                type="text"
                id="mail_username"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
              />
            </div>
            <div>
              <label for="mail_password" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Password</label>
              <input
                v-model="emailSettings.mail_password"
                type="password"
                id="mail_password"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
              />
            </div>
            <div>
              <label for="mail_from_address" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">From Address</label>
              <input
                v-model="emailSettings.mail_from_address"
                type="email"
                id="mail_from_address"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="noreply@academy.com"
              />
            </div>
            <div>
              <label for="mail_from_name" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">From Name</label>
              <input
                v-model="emailSettings.mail_from_name"
                type="text"
                id="mail_from_name"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="Academy Platform"
              />
            </div>
          </div>

          <div class="flex justify-between">
            <Button type="button" variant="outline" @click="testEmailConnection">
              Test Connection
            </Button>
            <Button type="submit" :disabled="emailForm.processing">
              {{ emailForm.processing ? 'Saving...' : 'Save Email Settings' }}
            </Button>
          </div>
        </form>
      </div>

      <!-- Security Settings -->
      <div v-show="activeTab === 'security'" :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'rounded-lg shadow-sm border']">
        <div :class="[isDarkMode ? 'border-gray-700' : 'border-gray-200', 'px-6 py-4 border-b']">
          <h3 :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-lg font-medium']">Security Settings</h3>
          <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm mt-1']">Configure security and authentication settings</p>
        </div>
        <form @submit.prevent="saveSecuritySettings" class="p-6 space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="session_lifetime" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Session Lifetime (minutes)</label>
              <input
                v-model.number="securitySettings.session_lifetime"
                type="number"
                id="session_lifetime"
                min="1"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="120"
              />
            </div>
            <div>
              <label for="password_min_length" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Minimum Password Length</label>
              <input
                v-model.number="securitySettings.password_min_length"
                type="number"
                id="password_min_length"
                min="6"
                max="50"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="8"
              />
            </div>
            <div>
              <label for="max_login_attempts" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Max Login Attempts</label>
              <input
                v-model.number="securitySettings.max_login_attempts"
                type="number"
                id="max_login_attempts"
                min="1"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="5"
              />
            </div>
            <div>
              <label for="lockout_duration" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Lockout Duration (minutes)</label>
              <input
                v-model.number="securitySettings.lockout_duration"
                type="number"
                id="lockout_duration"
                min="1"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="15"
              />
            </div>
          </div>

          <div class="space-y-4">
            <div class="flex items-center">
              <input
                v-model="securitySettings.require_password_confirmation"
                type="checkbox"
                id="require_password_confirmation"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="require_password_confirmation" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'ml-2 block text-sm']">
                Require password confirmation for sensitive actions
              </label>
            </div>
            <div class="flex items-center">
              <input
                v-model="securitySettings.force_https"
                type="checkbox"
                id="force_https"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="force_https" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'ml-2 block text-sm']">
                Force HTTPS connections
              </label>
            </div>
            <div class="flex items-center">
              <input
                v-model="securitySettings.enable_two_factor"
                type="checkbox"
                id="enable_two_factor"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="enable_two_factor" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'ml-2 block text-sm']">
                Enable two-factor authentication
              </label>
            </div>
          </div>

          <div class="flex justify-end">
            <Button type="submit" :disabled="securityForm.processing">
              {{ securityForm.processing ? 'Saving...' : 'Save Security Settings' }}
            </Button>
          </div>
        </form>
      </div>

      <!-- Performance Settings -->
      <div v-show="activeTab === 'performance'" :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'rounded-lg shadow-sm border']">
        <div :class="[isDarkMode ? 'border-gray-700' : 'border-gray-200', 'px-6 py-4 border-b']">
          <h3 :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-lg font-medium']">Performance Settings</h3>
          <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm mt-1']">Configure caching and performance optimization</p>
        </div>
        <form @submit.prevent="savePerformanceSettings" class="p-6 space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="cache_driver" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Cache Driver</label>
              <select
                v-model="performanceSettings.cache_driver"
                id="cache_driver"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
              >
                <option value="file">File</option>
                <option value="redis">Redis</option>
                <option value="memcached">Memcached</option>
                <option value="database">Database</option>
              </select>
            </div>
            <div>
              <label for="cache_ttl" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Default Cache TTL (seconds)</label>
              <input
                v-model.number="performanceSettings.cache_ttl"
                type="number"
                id="cache_ttl"
                min="1"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="3600"
              />
            </div>
            <div>
              <label for="queue_driver" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Queue Driver</label>
              <select
                v-model="performanceSettings.queue_driver"
                id="queue_driver"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
              >
                <option value="sync">Sync</option>
                <option value="database">Database</option>
                <option value="redis">Redis</option>
                <option value="sqs">Amazon SQS</option>
              </select>
            </div>
            <div>
              <label for="max_file_size" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Max Upload Size (MB)</label>
              <input
                v-model.number="performanceSettings.max_file_size"
                type="number"
                id="max_file_size"
                min="1"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="10"
              />
            </div>
          </div>

          <div class="space-y-4">
            <div class="flex items-center">
              <input
                v-model="performanceSettings.enable_compression"
                type="checkbox"
                id="enable_compression"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="enable_compression" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'ml-2 block text-sm']">
                Enable GZIP compression
              </label>
            </div>
            <div class="flex items-center">
              <input
                v-model="performanceSettings.enable_cdn"
                type="checkbox"
                id="enable_cdn"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="enable_cdn" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'ml-2 block text-sm']">
                Enable CDN for static assets
              </label>
            </div>
          </div>

          <div class="flex justify-between">
            <div class="space-x-2">
              <Button type="button" variant="outline" @click="clearCache">
                Clear Cache
              </Button>
              <Button type="button" variant="outline" @click="optimizeDatabase">
                Optimize Database
              </Button>
            </div>
            <Button type="submit" :disabled="performanceForm.processing">
              {{ performanceForm.processing ? 'Saving...' : 'Save Performance Settings' }}
            </Button>
          </div>
        </form>
      </div>

      <!-- Backup Settings -->
      <div v-show="activeTab === 'backup'" :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'rounded-lg shadow-sm border']">
        <div :class="[isDarkMode ? 'border-gray-700' : 'border-gray-200', 'px-6 py-4 border-b']">
          <h3 :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-lg font-medium']">Backup Settings</h3>
          <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm mt-1']">Configure automated backups and data retention</p>
        </div>
        <form @submit.prevent="saveBackupSettings" class="p-6 space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="backup_frequency" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Backup Frequency</label>
              <select
                v-model="backupSettings.backup_frequency"
                id="backup_frequency"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
              >
                <option value="daily">Daily</option>
                <option value="weekly">Weekly</option>
                <option value="monthly">Monthly</option>
                <option value="disabled">Disabled</option>
              </select>
            </div>
            <div>
              <label for="backup_retention" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Retention Period (days)</label>
              <input
                v-model.number="backupSettings.backup_retention"
                type="number"
                id="backup_retention"
                min="1"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
                placeholder="30"
              />
            </div>
            <div>
              <label for="backup_storage" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Storage Location</label>
              <select
                v-model="backupSettings.backup_storage"
                id="backup_storage"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
              >
                <option value="local">Local Storage</option>
                <option value="s3">Amazon S3</option>
                <option value="dropbox">Dropbox</option>
                <option value="google">Google Drive</option>
              </select>
            </div>
            <div>
              <label for="backup_time" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'block text-sm font-medium']">Backup Time</label>
              <input
                v-model="backupSettings.backup_time"
                type="time"
                id="backup_time"
                :class="[
                  isDarkMode 
                    ? 'bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 focus:ring-blue-500' 
                    : 'bg-white border-gray-300 text-gray-900 placeholder-gray-500 focus:border-blue-500 focus:ring-blue-500',
                  'mt-1 block w-full rounded-md shadow-sm'
                ]"
              />
            </div>
          </div>

          <div class="space-y-4">
            <div class="flex items-center">
              <input
                v-model="backupSettings.include_uploads"
                type="checkbox"
                id="include_uploads"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="include_uploads" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'ml-2 block text-sm']">
                Include uploaded files in backup
              </label>
            </div>
            <div class="flex items-center">
              <input
                v-model="backupSettings.compress_backups"
                type="checkbox"
                id="compress_backups"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="compress_backups" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'ml-2 block text-sm']">
                Compress backup files
              </label>
            </div>
            <div class="flex items-center">
              <input
                v-model="backupSettings.email_notifications"
                type="checkbox"
                id="email_notifications"
                class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <label for="email_notifications" :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'ml-2 block text-sm']">
                Send email notifications for backup status
              </label>
            </div>
          </div>

          <div class="flex justify-between">
            <Button type="button" variant="outline" @click="createBackupNow">
              Create Backup Now
            </Button>
            <Button type="submit" :disabled="backupForm.processing">
              {{ backupForm.processing ? 'Saving...' : 'Save Backup Settings' }}
            </Button>
          </div>
        </form>
      </div>

      <!-- Maintenance -->
      <div v-show="activeTab === 'maintenance'" :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white border-gray-200', 'rounded-lg shadow-sm border']">
        <div :class="[isDarkMode ? 'border-gray-700' : 'border-gray-200', 'px-6 py-4 border-b']">
          <h3 :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-lg font-medium']">Maintenance & Monitoring</h3>
          <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm mt-1']">System maintenance tools and monitoring</p>
        </div>
        <div class="p-6 space-y-6">
          <!-- System Status -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div :class="[isDarkMode ? 'bg-gray-700' : 'bg-gray-50', 'rounded-lg p-4']">
              <div class="flex items-center justify-between">
                <span :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'text-sm font-medium']">Database Status</span>
                <Badge :variant="systemStatus.database ? 'default' : 'destructive'">
                  {{ systemStatus.database ? 'Connected' : 'Disconnected' }}
                </Badge>
              </div>
            </div>
            <div :class="[isDarkMode ? 'bg-gray-700' : 'bg-gray-50', 'rounded-lg p-4']">
              <div class="flex items-center justify-between">
                <span :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'text-sm font-medium']">Cache Status</span>
                <Badge :variant="systemStatus.cache ? 'default' : 'destructive'">
                  {{ systemStatus.cache ? 'Active' : 'Inactive' }}
                </Badge>
              </div>
            </div>
            <div :class="[isDarkMode ? 'bg-gray-700' : 'bg-gray-50', 'rounded-lg p-4']">
              <div class="flex items-center justify-between">
                <span :class="[isDarkMode ? 'text-gray-200' : 'text-gray-700', 'text-sm font-medium']">Queue Status</span>
                <Badge :variant="systemStatus.queue ? 'default' : 'destructive'">
                  {{ systemStatus.queue ? 'Running' : 'Stopped' }}
                </Badge>
              </div>
            </div>
          </div>

          <!-- Maintenance Actions -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div class="space-y-4">
              <h4 :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'text-sm font-medium']">Cache Management</h4>
              <div class="space-y-2">
                <Button variant="outline" class="w-full justify-start" @click="clearApplicationCache">
                  <Trash2 class="h-4 w-4 mr-2" />
                  Clear Application Cache
                </Button>
                <Button variant="outline" class="w-full justify-start" @click="clearViewCache">
                  <Trash2 class="h-4 w-4 mr-2" />
                  Clear View Cache
                </Button>
                <Button variant="outline" class="w-full justify-start" @click="clearRouteCache">
                  <Trash2 class="h-4 w-4 mr-2" />
                  Clear Route Cache
                </Button>
              </div>
            </div>

            <div class="space-y-4">
              <h4 :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'text-sm font-medium']">System Maintenance</h4>
              <div class="space-y-2">
                <Button variant="outline" class="w-full justify-start" @click="runMigrations">
                  <Database class="h-4 w-4 mr-2" />
                  Run Database Migrations
                </Button>
                <Button variant="outline" class="w-full justify-start" @click="optimizeTables">
                  <Zap class="h-4 w-4 mr-2" />
                  Optimize Database Tables
                </Button>
                <Button variant="outline" class="w-full justify-start" @click="generateSitemap">
                  <FileText class="h-4 w-4 mr-2" />
                  Generate Sitemap
                </Button>
              </div>
            </div>
          </div>

          <!-- System Information -->
          <div :class="[isDarkMode ? 'border-gray-600' : 'border-gray-200', 'border-t pt-6']">
            <h4 :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'text-sm font-medium mb-4']">System Information</h4>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 text-sm">
              <div>
                <span :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500']">PHP Version:</span>
                <div :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'font-medium']">{{ systemInfo.php_version || 'N/A' }}</div>
              </div>
              <div>
                <span :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500']">Laravel Version:</span>
                <div :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'font-medium']">{{ systemInfo.laravel_version || 'N/A' }}</div>
              </div>
              <div>
                <span :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500']">Database:</span>
                <div :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'font-medium']">{{ systemInfo.database_type || 'N/A' }}</div>
              </div>
              <div>
                <span :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500']">Server:</span>
                <div :class="[isDarkMode ? 'text-gray-200' : 'text-gray-900', 'font-medium']">{{ systemInfo.server_software || 'N/A' }}</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    </div>
  </AdminLayout>
</template>

<script setup>
import { ref, reactive, onMounted, onUnmounted } from 'vue'
import { router, useForm } from '@inertiajs/vue3'
import AdminLayout from '@/Layouts/AdminLayout.vue'
import { Button } from '@/Components/shadcn/ui/button'
import { Badge } from '@/Components/shadcn/ui/badge'
import { 
  Settings, 
  Mail, 
  Shield, 
  Zap, 
  HardDrive, 
  Wrench,
  Trash2,
  Database,
  FileText
} from 'lucide-vue-next'

const props = defineProps({
  settings: {
    type: Object,
    default: () => ({})
  },
  systemStatus: {
    type: Object,
    default: () => ({
      database: true,
      cache: true,
      queue: true
    })
  },
  systemInfo: {
    type: Object,
    default: () => ({})
  }
})

// Dark mode handling
const isDarkMode = ref(false)

const updateDarkMode = () => {
  isDarkMode.value = localStorage.getItem('adminDarkMode') === 'true'
}

onMounted(() => {
  updateDarkMode()
  window.addEventListener('storage', updateDarkMode)
  window.addEventListener('adminDarkModeChanged', updateDarkMode)
})

onUnmounted(() => {
  window.removeEventListener('storage', updateDarkMode)
  window.removeEventListener('adminDarkModeChanged', updateDarkMode)
})

// Active tab
const activeTab = ref('general')

// Tab configuration
const tabs = [
  { id: 'general', name: 'General', icon: Settings },
  { id: 'email', name: 'Email', icon: Mail },
  { id: 'security', name: 'Security', icon: Shield },
  { id: 'performance', name: 'Performance', icon: Zap },
  { id: 'backup', name: 'Backup', icon: HardDrive },
  { id: 'maintenance', name: 'Maintenance', icon: Wrench },
]

// Settings data
const generalSettings = reactive({
  app_name: props.settings.app_name || '',
  app_url: props.settings.app_url || '',
  timezone: props.settings.timezone || 'UTC',
  default_language: props.settings.default_language || 'en',
  user_registration: props.settings.user_registration || false,
  email_verification: props.settings.email_verification || false,
  maintenance_mode: props.settings.maintenance_mode || false,
})

const emailSettings = reactive({
  mail_driver: props.settings.mail_driver || 'smtp',
  mail_host: props.settings.mail_host || '',
  mail_port: props.settings.mail_port || 587,
  mail_encryption: props.settings.mail_encryption || 'tls',
  mail_username: props.settings.mail_username || '',
  mail_password: props.settings.mail_password || '',
  mail_from_address: props.settings.mail_from_address || '',
  mail_from_name: props.settings.mail_from_name || '',
})

const securitySettings = reactive({
  session_lifetime: props.settings.session_lifetime || 120,
  password_min_length: props.settings.password_min_length || 8,
  max_login_attempts: props.settings.max_login_attempts || 5,
  lockout_duration: props.settings.lockout_duration || 15,
  require_password_confirmation: props.settings.require_password_confirmation || false,
  force_https: props.settings.force_https || false,
  enable_two_factor: props.settings.enable_two_factor || false,
})

const performanceSettings = reactive({
  cache_driver: props.settings.cache_driver || 'file',
  cache_ttl: props.settings.cache_ttl || 3600,
  queue_driver: props.settings.queue_driver || 'sync',
  max_file_size: props.settings.max_file_size || 10,
  enable_compression: props.settings.enable_compression || false,
  enable_cdn: props.settings.enable_cdn || false,
})

const backupSettings = reactive({
  backup_frequency: props.settings.backup_frequency || 'daily',
  backup_retention: props.settings.backup_retention || 30,
  backup_storage: props.settings.backup_storage || 'local',
  backup_time: props.settings.backup_time || '02:00',
  include_uploads: props.settings.include_uploads || true,
  compress_backups: props.settings.compress_backups || true,
  email_notifications: props.settings.email_notifications || false,
})

// Forms
const generalForm = useForm(generalSettings)
const emailForm = useForm(emailSettings)
const securityForm = useForm(securitySettings)
const performanceForm = useForm(performanceSettings)
const backupForm = useForm(backupSettings)

// Form submission methods
const saveGeneralSettings = () => {
  generalForm.post('/admin/system-settings/general', {
    preserveScroll: true,
    onSuccess: () => {
      // Handle success
    }
  })
}

const saveEmailSettings = () => {
  emailForm.post('/admin/system-settings/email', {
    preserveScroll: true,
    onSuccess: () => {
      // Handle success
    }
  })
}

const saveSecuritySettings = () => {
  securityForm.post('/admin/system-settings/security', {
    preserveScroll: true,
    onSuccess: () => {
      // Handle success
    }
  })
}

const savePerformanceSettings = () => {
  performanceForm.post('/admin/system-settings/performance', {
    preserveScroll: true,
    onSuccess: () => {
      // Handle success
    }
  })
}

const saveBackupSettings = () => {
  backupForm.post('/admin/system-settings/backup', {
    preserveScroll: true,
    onSuccess: () => {
      // Handle success
    }
  })
}

// Action methods
const testEmailConnection = () => {
  router.post('/admin/system-settings/test-email', {}, {
    preserveScroll: true
  })
}

const clearCache = () => {
  router.post('/admin/system-settings/clear-cache', {}, {
    preserveScroll: true
  })
}

const optimizeDatabase = () => {
  router.post('/admin/system-settings/optimize-database', {}, {
    preserveScroll: true
  })
}

const createBackupNow = () => {
  router.post('/admin/system-settings/create-backup', {}, {
    preserveScroll: true
  })
}

const clearApplicationCache = () => {
  router.post('/admin/system-settings/clear-application-cache', {}, {
    preserveScroll: true
  })
}

const clearViewCache = () => {
  router.post('/admin/system-settings/clear-view-cache', {}, {
    preserveScroll: true
  })
}

const clearRouteCache = () => {
  router.post('/admin/system-settings/clear-route-cache', {}, {
    preserveScroll: true
  })
}

const runMigrations = () => {
  router.post('/admin/system-settings/run-migrations', {}, {
    preserveScroll: true
  })
}

const optimizeTables = () => {
  router.post('/admin/system-settings/optimize-tables', {}, {
    preserveScroll: true
  })
}

const generateSitemap = () => {
  router.post('/admin/system-settings/generate-sitemap', {}, {
    preserveScroll: true
  })
}
</script>