<script setup>
import { ref, onMounted, onUnmounted } from 'vue';
import { Head } from '@inertiajs/vue3';
import AdminLayout from '@/Layouts/AdminLayout.vue';

const props = defineProps({
    monitoring_data: Object,
});

const data = ref(props.monitoring_data);
const isLoading = ref(false);
const lastUpdate = ref(new Date());

// Dark mode state management
const isDarkMode = ref(false);

// Initialize dark mode from localStorage
const initializeDarkMode = () => {
  const saved = localStorage.getItem('adminDarkMode');
  if (saved !== null) {
    isDarkMode.value = JSON.parse(saved);
  }
};

// Listen for dark mode changes
const handleDarkModeChange = (event) => {
  if (event.key === 'adminDarkMode') {
    isDarkMode.value = JSON.parse(event.newValue || 'false');
  }
};

const handleCustomDarkModeChange = (event) => {
  isDarkMode.value = event.detail.isDarkMode;
};

// Auto-refresh every 30 seconds
let refreshInterval = null;

const refreshData = async () => {
    if (isLoading.value) return;
    
    isLoading.value = true;
    try {
        const response = await fetch('/admin/bot-monitoring/api-data');
        const newData = await response.json();
        data.value = newData;
        lastUpdate.value = new Date();
    } catch (error) {
        console.error('Failed to refresh data:', error);
    } finally {
        isLoading.value = false;
    }
};

onMounted(() => {
    initializeDarkMode();
    
    // Listen for dark mode changes
    window.addEventListener('storage', handleDarkModeChange);
    window.addEventListener('adminDarkModeChanged', handleCustomDarkModeChange);
    
    refreshInterval = setInterval(refreshData, 30000); // 30 seconds
});

onUnmounted(() => {
    window.removeEventListener('storage', handleDarkModeChange);
    window.removeEventListener('adminDarkModeChanged', handleCustomDarkModeChange);
    
    if (refreshInterval) {
        clearInterval(refreshInterval);
    }
});

const getSeverityColor = (level) => {
    if (isDarkMode.value) {
        if (level >= 80) return 'text-red-400 bg-red-900/30';
        if (level >= 50) return 'text-orange-400 bg-orange-900/30';
        if (level >= 30) return 'text-yellow-400 bg-yellow-900/30';
        return 'text-gray-400 bg-gray-700';
    } else {
        if (level >= 80) return 'text-red-600 bg-red-100';
        if (level >= 50) return 'text-orange-600 bg-orange-100';
        if (level >= 30) return 'text-yellow-600 bg-yellow-100';
        return 'text-gray-600 bg-gray-100';
    }
};

const formatTime = (timestamp) => {
    return new Date(timestamp).toLocaleTimeString();
};
</script>

<template>
    <Head title="Bot Protection Monitoring" />
    
    <AdminLayout>
        <div class="p-6">
            <!-- Header -->
            <div class="flex justify-between items-center mb-6">
                <div>
                    <h1 :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-3xl font-bold']">Bot Protection Monitor</h1>
                    <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-600']">Real-time security monitoring dashboard</p>
                </div>
                <div class="flex items-center space-x-4">
                    <span :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-sm']">
                        Last updated: {{ lastUpdate.toLocaleTimeString() }}
                    </span>
                    <button 
                        @click="refreshData"
                        :disabled="isLoading"
                        class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50"
                    >
                        <span v-if="isLoading">Refreshing...</span>
                        <span v-else>Refresh</span>
                    </button>
                </div>
            </div>

            <!-- Overview Cards -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white', 'rounded-lg shadow p-6']">
                    <div class="flex items-center">
                        <div class="p-2 bg-red-100 rounded-lg">
                            <svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L5.636 5.636"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-600', 'text-sm font-medium']">Blocked IPs</p>
                            <p :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-2xl font-bold']">{{ data.overview.blocked_ips_count }}</p>
                        </div>
                    </div>
                </div>

                <div :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white', 'rounded-lg shadow p-6']">
                    <div class="flex items-center">
                        <div class="p-2 bg-orange-100 rounded-lg">
                            <svg class="w-6 h-6 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-600', 'text-sm font-medium']">Suspicious (24h)</p>
                            <p :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-2xl font-bold']">{{ data.overview.suspicious_activities_24h }}</p>
                        </div>
                    </div>
                </div>

                <div :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white', 'rounded-lg shadow p-6']">
                    <div class="flex items-center">
                        <div class="p-2 bg-blue-100 rounded-lg">
                            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-600', 'text-sm font-medium']">Detection Rate</p>
                            <p :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-2xl font-bold']">{{ data.overview.detection_rate }}%</p>
                        </div>
                    </div>
                </div>

                <div :class="[isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white', 'rounded-lg shadow p-6']">
                    <div class="flex items-center">
                        <div class="p-2 bg-green-100 rounded-lg">
                            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-600', 'text-sm font-medium']">Avg Response</p>
                            <p :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-2xl font-bold']">{{ data.overview.avg_response_time }}ms</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content Grid -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <!-- Recent Suspicious Activity -->
                <div :class="[isDarkMode ? 'bg-gray-800' : 'bg-white', 'rounded-lg shadow']">
                    <div :class="[isDarkMode ? 'border-gray-700' : 'border-gray-200', 'px-6 py-4 border-b']">
                        <h3 :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-lg font-semibold']">Recent Suspicious Activity</h3>
                    </div>
                    <div class="p-6">
                        <div class="space-y-4 max-h-96 overflow-y-auto">
                            <div 
                                v-for="activity in data.recent_activity" 
                                :key="activity.timestamp"
                                :class="[isDarkMode ? 'border-gray-700' : 'border-gray-200', 'flex items-center justify-between p-3 border rounded-lg']"
                            >
                                <div class="flex-1">
                                    <div class="flex items-center space-x-2">
                                        <span :class="[isDarkMode ? 'text-gray-300' : 'text-gray-900', 'font-mono text-sm']">{{ activity.ip }}</span>
                                        <span 
                                            :class="getSeverityColor(activity.suspicion_level)"
                                            class="px-2 py-1 rounded-full text-xs font-medium"
                                        >
                                            {{ activity.action }}
                                        </span>
                                    </div>
                                    <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-600', 'text-sm mt-1']">
                                        {{ activity.reasons[0] }}
                                    </p>
                                    <p :class="[isDarkMode ? 'text-gray-500' : 'text-gray-400', 'text-xs']">
                                        {{ formatTime(activity.timestamp) }}
                                    </p>
                                </div>
                                <div class="text-right">
                                    <div :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-lg font-semibold']">
                                        {{ activity.suspicion_level }}
                                    </div>
                                    <div :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-xs']">Score</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Blocked IPs -->
                <div :class="[isDarkMode ? 'bg-gray-800' : 'bg-white', 'rounded-lg shadow']">
                    <div :class="[isDarkMode ? 'border-gray-700' : 'border-gray-200', 'px-6 py-4 border-b']">
                        <h3 :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-lg font-semibold']">Currently Blocked IPs</h3>
                    </div>
                    <div class="p-6">
                        <div class="space-y-4 max-h-96 overflow-y-auto">
                            <div 
                                v-for="blocked in data.blocked_ips" 
                                :key="blocked.ip"
                                :class="[isDarkMode ? 'border-gray-700' : 'border-gray-200', 'flex items-center justify-between p-3 border rounded-lg']"
                            >
                                <div class="flex-1">
                                    <div :class="[isDarkMode ? 'text-gray-300' : 'text-gray-900', 'font-mono text-sm font-semibold']">{{ blocked.ip }}</div>
                                    <p :class="[isDarkMode ? 'text-gray-400' : 'text-gray-600', 'text-sm']">{{ blocked.reason }}</p>
                                    <p :class="[isDarkMode ? 'text-gray-500' : 'text-gray-400', 'text-xs']">
                                        Blocked: {{ new Date(blocked.blocked_at).toLocaleTimeString() }}
                                    </p>
                                </div>
                                <div class="text-right">
                                    <div class="text-sm font-medium text-red-600">
                                        {{ blocked.remaining }}m left
                                    </div>
                                    <button class="text-xs text-blue-600 hover:underline">
                                        Unblock
                                    </button>
                                </div>
                            </div>
                            
                            <div v-if="data.blocked_ips.length === 0" :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'text-center py-8']">
                                No IPs currently blocked
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Hourly Statistics Chart -->
            <div :class="[isDarkMode ? 'bg-gray-800' : 'bg-white', 'rounded-lg shadow mt-6']">
                <div :class="[isDarkMode ? 'border-gray-700' : 'border-gray-200', 'px-6 py-4 border-b']">
                    <h3 :class="[isDarkMode ? 'text-white' : 'text-gray-900', 'text-lg font-semibold']">24-Hour Activity</h3>
                </div>
                <div class="p-6">
                    <!-- Simple bar chart representation -->
                    <div class="flex items-end space-x-1 h-40">
                        <div 
                            v-for="hour in data.hourly_stats" 
                            :key="hour.hour"
                            :class="[isDarkMode ? 'bg-blue-600 hover:bg-blue-500' : 'bg-blue-100 hover:bg-blue-200', 'flex-1 transition-colors cursor-pointer relative group']"
                            :style="{ height: Math.max(hour.suspicious_requests * 2, 4) + 'px' }"
                        >
                            <!-- Tooltip -->
                            <div class="absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 bg-black text-white text-xs rounded py-1 px-2 opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap">
                                {{ hour.hour }}: {{ hour.suspicious_requests }} suspicious
                            </div>
                        </div>
                    </div>
                    <div :class="[isDarkMode ? 'text-gray-400' : 'text-gray-500', 'flex justify-between text-xs mt-2']">
                        <span>24h ago</span>
                        <span>Now</span>
                    </div>
                </div>
            </div>
        </div>
    </AdminLayout>
</template>
